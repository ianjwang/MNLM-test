% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/mnlm_perlin.R
\name{mnlm_perlin}
\alias{mnlm_perlin}
\title{Multiple neutral landscape models using Perlin noise}
\usage{
mnlm_perlin(
  nlayers = 2,
  r,
  ncol,
  nrow,
  frequency = 0.01,
  interpolator = "quintic",
  fractal = "fbm",
  octaves = 3,
  lacunarity = 2,
  gain = 0.5,
  pertubation = "none",
  pertubation_amplitude = 1
)
}
\arguments{
\item{nlayers}{The number of NLMs to generate}

\item{r}{The correlation coefficient between the first NLM and each successive NLM}

\item{ncol}{The number of columns in the rasters}

\item{nrow}{The number of rows in the rasters}

\item{frequency}{Determines the granularity of the features in the noise}

\item{interpolator}{Determines how values between sampled points be calculated. Options are 'linear', 'hermite', or 'quintic' (default), ranging from lowest to highest quality.}

\item{fractal}{The fractal type to use. Options are 'none', 'fbm' (default), 'billow', or 'rigid-multi'. It is suggested that you experiment with the different types to get a feel for how they behaves.}

\item{octaves}{The number of noise layers used to create the fractal noise. Ignored if fractal = 'none'.}

\item{lacunarity}{The frequency multiplier between successive noise layers when building fractal noise. Ignored if fractal = 'none'.}

\item{gain}{The relative strength between successive noise layers when building fractal noise (default = 0.5). Ignored if fractal = 'none'.}

\item{pertubation}{The pertubation to use. Either 'none' (default), 'normal', or 'fractal'. Defines the displacement (warping) of the noise, with 'normal' giving a smooth warping and 'fractal' giving a more erratic warping.}

\item{pertubation_amplitude}{The maximal pertubation distance from the origin (default = 1). Ignored if pertubation = 'none'.}
}
\description{
Multiple neutral landscape models using Perlin noise
}
\details{
Generates multiple neutral landscape models using perlin noise, a well known gradient noise algorithm that has been used extensively for generating landscapes.
The r argument can accept either a single value, in which case all NLMs produced will have the same correlation with the first layer, or a vector containing the desired correlation coefficients for each layer.
}
\examples{
NLMs <- mnlm_perlin(nlayers = 3, r = c(0.3, 0.6), ncol = 20, nrow = 20)
}
\references{
Perlin, Ken (1985). An Image Synthesizer. SIGGRAPH Comput. Graph. 19 (0097-8930): 287â€“296. doi:10.1145/325165.325247.
}
